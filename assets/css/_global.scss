// html ================================================

html {
  font-size:$font-size-base;
}

// body
body {
  font-family: $font-std--sans;
  font-size:$font-size-mobile;
  @include break(phone) {
    font-size:$font-size-std;
  }
  line-height:$line-height--tight;
  background-color:$color-bg;
  color:$black;
}

// SOME RESETS ===============================================

img{
  border-radius: $border-radius;
}

// MAIN LAYOUT =============================================================

html, body{
  width: 100%;
  height: 100%;
}

body{
  display: flex;
  flex-direction: column;
}

.header{
  position:relative;
}

// main
main{
  position:relative;
  margin-top:$header-height-mobile;
  flex-grow: 1;
  @include break(tablet) {
      margin-top:$header-height;
  }
}

footer{
  flex-shrink: 0;
}

// ANIMATION =============================================================

// fancy transitions
$move-whip: cubic-bezier(0.8, 0, 0.3, 1);
$move-snap: cubic-bezier(0.7, -0.5, 0.3, 1.5);
$move-snap-in: cubic-bezier(0.6, -0.3, 0.7, 0);
$move-snap-out: cubic-bezier(0.2, 0.9, 0.3, 1.3);

@mixin transition($property: all, $speed: .2s, $anim: linear ){
  transition-property: $property;
  transition-duration: $speed;
  transition-timing-function: $anim;
}

// multiple arguments
@mixin transitions($speed, $anim, $property... ){
  transition-property: $property;
  transition-duration: $speed;
  transition-timing-function: $anim;
}

// anchor
a{
  @include transition(color, .5s);
}

// scroll behaviour
html{
  scroll-behavior: smooth;
}

svg path{
  fill:yellow!important;
}


// TYPOGRAPHY =================================================================================================

// Blocky text
@mixin text-blocky($font-size:1.4rem){
  font-family:$font-blocky;
  line-height: $line-height-std;
  text-transform:uppercase;
  letter-spacing: .05em;
  font-size:$font-size;
  p{
    line-height: $line-height-std;
    font-size:$font-size;
  }
}

@mixin text-blocky--tiny($font-size:1.2rem){
  font-family:$font-blocky;
  line-height: $line-height-std;
  text-transform:uppercase;
  letter-spacing: .05em;
  font-size:$font-size;
  p{
    line-height: $line-height-std;
    font-size:$font-size;
  }
}

// Blocky text lowercase
@mixin text-blocky--lower($font-size:1.4rem){
  font-family:$font-blocky;
  line-height: $line-height--tight;
  letter-spacing: .05em;
  @include break(phone) {
    font-size:$font-size;
  }
  p{
    line-height: $line-height-std;
  }
}

.text-blocky{
  @include text-blocky;
  color: blue;
}
.text-blocky--lower{
  @include text-blocky--lower;
}
.text-blocky--tiny{
  @include text-blocky--tiny;
}


// Super Blocky text
@mixin text-blocky-super($font-size:1.8rem){
  font-family:$font-blocky;
  line-height: $line-height-std;
  text-transform:uppercase;
  @include break(phone) {
    font-size:$font-size;
  }
  p{
    line-height: $line-height-std;
  }
}

// Super Blocky text lowercase
@mixin text-blocky-super--lower($font-size:1.8rem){
  font-family:$font-blocky;
  line-height: $line-height-std;
  @include break(phone) {
    font-size:$font-size;
  }
  p{
    line-height: $line-height-std;
  }
}







// normal text
@mixin text-std{
  font-size: 1.2rem;
  line-height: 1.2rem;
  font-family:$font-std--sans;
  @include break(medium) {
    font-size:1.8rem;
    line-height:1.2;
  }
}

// body text
@mixin text-body{
  font-size: $font-size-mobile;
  line-height: $line-height-std;
  font-family:$font-std;
  @include break(medium) {
    font-size:1.4rem;
    line-height:1.6;
  }
}


@mixin text-tiny{
  font-size:$font-size-tiny;
  line-height:1.4;
}

@mixin text-mobile{
  font-size:$font-size-tiny;
  font-weight: $weight-std-std;
  line-height:1.4;
}


@mixin text-gap{
  margin-bottom:$gap/2;
  @include break(tablet) {
    margin-bottom:$gap;
  }
}

@mixin text-gap--tight{
  margin-bottom:$gap--tight/2;
  @include break(tablet) {
    margin-bottom:$gap--tight;
  }
}

// underline
@mixin text-underline($color){
    text-decoration: underline;
    text-decoration-skip-ink: auto;
    text-decoration-color: $color;
}

// title standard
@mixin title($size:3.2rem, $color:$color-heading){
  line-height:$line-height--tight;
  color:$color;
  font-family:$font-blocky;
  font-size: clamp(2.2rem, 3.2vw, $size );
  @include break(tablet) {
    font-size:$size;
  }
  @include break-under(phone) {
    word-break:break-word;
  }
}

// title display
@mixin title-display($size:5rem){
  font-size: 3rem;
  line-height:1.1;
  font-family:$font-display;
  @include break(tablet) {
    font-size: 3rem;
  }
  @include break(medium) {
    font-size: $size;
  }
}

// title display large
@mixin title-display--large{
  font-size: 4rem;
  line-height:1.2;
  font-family:$font-display;
  @include break(tablet) {
    font-size: 6rem;
  }
  @include break(medium) {
    font-size: 7rem;
  }
}

// title display small
@mixin title-display--small{
  font-size: 3rem;
  font-family:$font-display;
  @include break(tablet) {
    font-size: 4rem;
  }
}

// title block –– titles for cards mainly
@mixin title-block($font-size:2.4rem){
  line-height:1.2;
  font-size: clamp(2rem, 3vw, $font-size );
  font-family:$font-blocky;
}

// title module
@mixin title-module{
  @include text-blocky;
  text-align: left;
  margin-bottom:$gap--responsive;
}

.title-module{
  @include title-module;
}

// leadin/intro text
@mixin text-leadin($font-size:2.2rem){
  -webkit-font-smoothing:antialiased;
  font-family:$font-bold;
  font-size:2rem;
  line-height:1.4;
  @include break(tablet) {
    font-size:$font-size;
    line-height:1.6;
  }
}

// text body
%text-body-format{
  h1, h2, h3, h4, h5, img, p, ul, ol{
    @include text-gap--tight;
  }
  font-family:$font-std;
  line-height:$line-height-std;
  img{
    width: 100%;
    max-width:$content-width;
      
  }
  h1, h2, h3, h4, h5{
    color:$color-body-heading;
    @include title;
    position: relative;
    bottom:0.02em;
  }
  h1, h2{
    font-size:3.2rem;
  }
  h3{
    font-size:2.2rem;
  }
  h4, h5{
    font-size:2rem;
    color:inherit;
  }
  p, li{
    font-size:1.6rem;
    line-height:1.8;
  }
  p, ol, ul, .cite, pre{
    max-width:$content-width;
  }
  ul{
    box-sizing:border-box;
  }
  li{
    width:calc(100% - 1em);
    list-style:none;
    position:relative;
    padding-left:1em;
    &:before{
      content:'\25A0';
      color:$color-secondary;
      position:absolute;
      left:0;
      top:0;
    }
  }
  & > *:last-child{
    margin-bottom:0;
    padding-bottom:0;
  }
  pre{
    background-color:$white;
    padding:1em;
  }
}

// LAYOUT ====================================================================================================

@mixin panel{
  width:100vw;
  padding-top:$gap--responsive--thick;
  padding-bottom:$gap--responsive--thick;
}

@mixin panel--nospaced{
  width:100vw;
}

@mixin container{
  width:100vw;
  max-width:$site-width;
  margin:0 auto;
}

@mixin container--margins{
  width:100vw;
  max-width:$site-width;
  margin:0 auto;
  padding: 0 $gap--responsive;
  @include break(site-width) {
    padding: 0;
  }
}

.container{
  @include container;
}

.container--margins{
  @include container--margins;
}

.panel{
  @include panel;
  &--nopad{
    padding-top:0;
    padding-bottom:0;
  }
  &--no-inner{
    @include break-under(site-width) {
      padding-left:$gap--responsive;
      padding-right:$gap--responsive;
    }
  }
  &__inner{
    @include container--margins;
  }
  &--nospaced{
    padding: 0;
    @include panel--nospaced;
  }
  &__divider{
    border: none;
    height: 4px;
    background: $color-primary;
    margin-bottom: $gap--tight;
    @include break(tablet) {
      margin-bottom: $gap;
    }
  }
  &__title{
    @include title-module;
  }
}

@mixin grid{
  display:grid;
  grid-gap:$gap--responsive;
  &__item{
    @include break-under(medium) {
      margin-bottom:$gap--responsive--thick;
    }
  }
}

@mixin grid--odd{
  @include break(medium) {
      display: grid;
      grid-template-rows: 1fr;
      grid-template-columns:1fr 1fr 1fr;
  }
  @include break(large) {
      grid-template-columns:1fr minmax(0, 400px) minmax(0, 400px) minmax(0, 400px) minmax(0, 400px) 1fr;
      grid-template-rows: 1fr;
  }
}

@mixin grid--even{
  @include break(medium) {
      display: grid;
      grid-template-rows: 1fr;
      grid-template-columns:1fr 1fr;
  }
  @include break(large) {
      grid-template-columns:1fr minmax(0, 800px) minmax(0, 800px) 1fr;
      grid-template-rows: 1fr;
  }
}


// GLOBAL MIXINS AND INCLUDES =====================================================================================

// tagline
.tagline, %tagline{
  color:$color-tagline;
  text-transform:uppercase;
  display:block;
  font-size:.8em;
}

@mixin bgimage($filename, $ext){
  background-image:url('#{$path-images}/#{$filename}.#{$ext}');
  background-repeat:no-repeat;
}


// GLOBAL ELEMENTS AND CLASSES =====================================================================================

// hidden/visible
.hidden{
  visibility:hidden;
  opacity:0;
  height:0;
}
.visible{
  visibility:visible;
  opacity:1;
}

p, ul, ol{
  padding:0;
  margin:0;
  line-height:$line-height-std;
  list-style:none;
}

// lists
ul{
  li{
    @include break-under(tablet) {
      margin-bottom:1em;
    }
  }
}

// anchor
a{
  text-decoration: none;
  color:$color-primary;
}

// styled links

@mixin link-styled($color:inherit, $border-color:$color-secondary, $hover-color:$color-accent ){
  color:$color;
  border-bottom:2px solid $border-color;
  display:inline;
  font-family:$font-blocky;
  &:hover{
    color:$hover-color;
  }
}

// Double border

@mixin double-border($top, $bottom){
  border-bottom:1px solid $top;
  position:relative;
    &:after{
      content:'';
      width:100%;
      height:1px;
      background-color:$bottom;
      display:block;
      position:absolute;
      bottom:0;
      left:0;
    }
}

// text highlight
::selection {
  background:$color-accent;
}

// screen reader only
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// text no break
.nobreak{
  white-space: nowrap;
}

// images

img{
  border-radius: none;
}


// component globals

@mixin component-dark{
  color:$white;
  background-color:$color-primary;
  div, span, h1, h2, h3, h4, h5, ul, ol, p, a, svg{
    color:$white;
  }
}
@mixin component-light{
  color:$color-primary;
  background-color:$white;
  h1, h2, h3, h4, h5, ul, ol, p, a{
    color:$color-primary;
  }
}

.component-dark{
  @include component-dark;
}
.component-light{
  @include component-light;
}

.component-title{
  @include text-blocky;
  padding-bottom:$space;
}






// BUTTONS =====================================================================================


// Turn button into inline link
@mixin button-inline{
  border-radius: 0;
  border:none;
  display:inline;
  padding:0;
  font-family:inherit;
  cursor:pointer;
  color:$link-colors;
}

@mixin btn-state($color, $textcolor){
    @include transition(background-color);
    &:hover {
        color:$textcolor;
        background-color: darken($color, 5);
    }
    &:active {
        color:$textcolor;
        background-color: darken($color, 5);
    }
};

.button{
    cursor:pointer;
    border-radius:3px;
    padding:1em;
    display: inline-block;
    width:auto;
    text-align:center;
    position:relative;
    text-decoration:none!important;
    background-color:$color-button;
    color:$white;
    @include btn-state($color-button, $white);
    @include break(phone){
        padding:1em 1.3em;
    }
    &--alt{
        background-color:$white;
        color:$color-button;
        @include btn-state($white, $color-secondary);
    }
    &--outline{
        background-color:transparent;
        color:$color-button;
        border:$color-button 1px solid;
        @include btn-state($color-button, $white);
    }
    // for buttons with lots of things inside that need to be aligned
    &__inner{
        width:100%;
        height:100%;
        @include align-center;
    }
    &--small{
        @include text-tiny;
        @include break(phone){
            padding:.8em 1em;
        }
    }
}





@mixin divider--dark{
  background-color: rgba(255, 255, 255, 0.1);
  border: 0;
  height: 2px;
  display: block;
  position: relative;
  margin-bottom: 4rem;
  &:after{
    content: "";
    display: block;
    width: 100%;
    height: 1px;
    position: relative;
    top: 0;
    background-color: black;
  }
}

@mixin divider--light{
  background-color: rgba(255, 255, 255, 0.3);
  border: 0;
  height: 2px;
  display: block;
  position: relative;
  margin-bottom: 4rem;
  &:after{
    content: "";
    display: block;
    width: 100%;
    height: 1px;
    position: relative;
    top: 0;
    background-color: rgba(0, 0, 0, 0.3);
  }
}



// WORDPRESS SPECIFIC OVERRIDES =====================================================================================

.wp-caption{
  width:auto!important;
}